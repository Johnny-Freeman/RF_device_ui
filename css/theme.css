/********************************************************
Base Widgets
********************************************************/
QMainWindow {
	
}

QWidget, QDialog {
	/* background-color: beige; */
	background-color: #332604;
}

/********************************************************
Containers
********************************************************/
QFrame {
	border: none;
}


QGroupBox {
	font: bold;
	color: white;
	
	border: solid;
	border-width: 3px;
	border-color: #fad94b;
}

/********************************************************
Text inputs
********************************************************/
/* Nice Windows-XP-style password character. */
QLineEdit{
	color: white;
}

QLabel, QAbstractButton {
	font: bold;
	color: #848586;
}

QComboBox, QLineEdit, QSpinBox, QTextEdit, QListView {
	background-color: #332604;
}

/* We reserve 1 pixel space in padding. When we get the focus,
	we kill the padding and enlarge the border. This makes the items
	glow. */
QLineEdit {
	border-width: 1px;
	padding: 0;
	border-style: solid;
	border-color: darkkhaki;
	border-radius: 0px;
}

QLineEdit:focus {
	border-width: 2px;
	padding: 0px;
}

/********************************************************
Labels
********************************************************/
QLabel, QAbstractButton {
	font: bold;
	color: #848586;
}

/* A QLabel is a QFrame ... */
QLabel {
	border: none;
	padding: 0;
	background: none;
}

/* A QToolTip is a QLabel ... */
QToolTip {
	border: 1px solid darkkhaki;
	padding: 0;
	border-radius: 3px;
	opacity: 200;
}

/********************************************************
TABS
********************************************************/
QTabWidget{
	border-radius: 0px;
}

QTabBar {
}

QTabBar::tab {
	height: 40px;
	width: 120px;
	background-color: #3b3b3b;
	border-width: 1px;
	border-color: black;
	border-style: outset;
	
	font: bold;
	color: white;
}

QTabBar::tab:pressed, QTabBar::tab:selected {
	border-color: black;
	background-color: #646464;
	border-style: inset;
}



/********************************************************
BUTTONS
	We provide a min-width and min-height for push buttons
	so that they look elegant regardless of the width of the text.
********************************************************/
QPushButton, QPushButton:unchecked {
	background-color: #3b3b3b;
	border-style: outset;
	border-width: 1px;
	border-color: darkkhaki;
	border-style: solid;
	border-radius: 0px;
}

/* inset border to look recessed, checked/unchecked */
QPushButton:pressed, QPushButton:checked {
	border-style: inset;
	background-color: #646464;
	color: white;
}